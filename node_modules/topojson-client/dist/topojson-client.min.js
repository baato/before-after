// https://github.com/topojson/topojson-client Version 3.0.0. Copyright 2017 Mike Bostock.
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(e.topojson=e.topojson||{})}(this,function(e){"use strict";function r(e,r){var n=r.id,o=r.bbox,a=null==r.properties?{}:r.properties,c=t(e,r);return null==n&&null==o?{type:"Feature",properties:a,geometry:c}:null==o?{type:"Feature",id:n,properties:a,geometry:c}:{type:"Feature",id:n,bbox:o,properties:a,geometry:c}}function t(e,r){function t(e,r){r.length&&r.pop();for(var t=l[e<0?~e:e],n=0,o=t.length;n<o;++n)r.push(f(t[n],n));e<0&&s(r,o)}function n(e){return f(e)}function o(e){for(var r=[],n=0,o=e.length;n<o;++n)t(e[n],r);return r.length<2&&r.push(r[0]),r}function a(e){for(var r=o(e);r.length<4;)r.push(r[0]);return r}function c(e){return e.map(a)}function i(e){var r,t=e.type;switch(t){case"GeometryCollection":return{type:t,geometries:e.geometries.map(i)};case"Point":r=n(e.coordinates);break;case"MultiPoint":r=e.coordinates.map(n);break;case"LineString":r=o(e.arcs);break;case"MultiLineString":r=e.arcs.map(o);break;case"Polygon":r=c(e.arcs);break;case"MultiPolygon":r=e.arcs.map(c);break;default:return null}return{type:t,coordinates:r}}var f=u(e.transform),l=e.arcs;return i(r)}function n(e,r,t){var n,a,c;if(arguments.length>1)n=o(e,r,t);else for(a=0,n=new Array(c=e.arcs.length);a<c;++a)n[a]=a;return{type:"MultiLineString",arcs:h(e,n)}}function o(e,r,t){function n(e){var r=e<0?~e:e;(s[r]||(s[r]=[])).push({i:e,g:u})}function o(e){e.forEach(n)}function a(e){e.forEach(o)}function c(e){e.forEach(a)}function i(e){switch(u=e,e.type){case"GeometryCollection":e.geometries.forEach(i);break;case"LineString":o(e.arcs);break;case"MultiLineString":case"Polygon":a(e.arcs);break;case"MultiPolygon":c(e.arcs)}}var u,f=[],s=[];return i(r),s.forEach(null==t?function(e){f.push(e[0].i)}:function(e){t(e[0].g,e[e.length-1].g)&&f.push(e[0].i)}),f}function a(e){for(var r,t=-1,n=e.length,o=e[n-1],a=0;++t<n;)r=o,o=e[t],a+=r[0]*o[1]-r[1]*o[0];return Math.abs(a)}function c(e,r){function n(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(n);break;case"Polygon":o(e.arcs);break;case"MultiPolygon":e.arcs.forEach(o)}}function o(e){e.forEach(function(r){r.forEach(function(r){(i[r=r<0?~r:r]||(i[r]=[])).push(e)})}),u.push(e)}function c(r){return a(t(e,{type:"Polygon",arcs:[r]}).coordinates[0])}var i={},u=[],f=[];return r.forEach(n),u.forEach(function(e){if(!e._){var r=[],t=[e];for(e._=1,f.push(r);e=t.pop();)r.push(e),e.forEach(function(e){e.forEach(function(e){i[e<0?~e:e].forEach(function(e){e._||(e._=1,t.push(e))})})})}}),u.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:f.map(function(r){var t,n=[];if(r.forEach(function(e){e.forEach(function(e){e.forEach(function(e){i[e<0?~e:e].length<2&&n.push(e)})})}),n=h(e,n),(t=n.length)>1)for(var o,a,u=1,f=c(n[0]);u<t;++u)(o=c(n[u]))>f&&(a=n[0],n[0]=n[u],n[u]=a,f=o);return n})}}var i=function(e){return e},u=function(e){if(null==e)return i;var r,t,n=e.scale[0],o=e.scale[1],a=e.translate[0],c=e.translate[1];return function(e,i){i||(r=t=0);var u=2,f=e.length,s=new Array(f);for(s[0]=(r+=e[0])*n+a,s[1]=(t+=e[1])*o+c;u<f;)s[u]=e[u],++u;return s}},f=function(e){function r(e){e=o(e),e[0]<a&&(a=e[0]),e[0]>i&&(i=e[0]),e[1]<c&&(c=e[1]),e[1]>f&&(f=e[1])}function t(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(t);break;case"Point":r(e.coordinates);break;case"MultiPoint":e.coordinates.forEach(r)}}var n,o=u(e.transform),a=1/0,c=a,i=-a,f=-a;e.arcs.forEach(function(e){for(var r,t=-1,n=e.length;++t<n;)r=o(e[t],t),r[0]<a&&(a=r[0]),r[0]>i&&(i=r[0]),r[1]<c&&(c=r[1]),r[1]>f&&(f=r[1])});for(n in e.objects)t(e.objects[n]);return[a,c,i,f]},s=function(e,r){for(var t,n=e.length,o=n-r;o<--n;)t=e[o],e[o++]=e[n],e[n]=t},l=function(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return r(e,t)})}:r(e,t)},h=function(e,r){function t(r){var t,n=e.arcs[r<0?~r:r],o=n[0];return e.transform?(t=[0,0],n.forEach(function(e){t[0]+=e[0],t[1]+=e[1]})):t=n[n.length-1],r<0?[t,o]:[o,t]}function n(e,r){for(var t in e){var n=e[t];delete r[n.start],delete n.start,delete n.end,n.forEach(function(e){o[e<0?~e:e]=1}),i.push(n)}}var o={},a={},c={},i=[],u=-1;return r.forEach(function(t,n){var o,a=e.arcs[t<0?~t:t];a.length<3&&!a[1][0]&&!a[1][1]&&(o=r[++u],r[u]=t,r[n]=o)}),r.forEach(function(e){var r,n,o=t(e),i=o[0],u=o[1];if(r=c[i])if(delete c[r.end],r.push(e),r.end=u,n=a[u]){delete a[n.start];var f=n===r?r:r.concat(n);a[f.start=r.start]=c[f.end=n.end]=f}else a[r.start]=c[r.end]=r;else if(r=a[u])if(delete a[r.start],r.unshift(e),r.start=i,n=c[i]){delete c[n.end];var s=n===r?r:n.concat(r);a[s.start=n.start]=c[s.end=r.end]=s}else a[r.start]=c[r.end]=r;else r=[e],a[r.start=i]=c[r.end=u]=r}),n(c,a),n(a,c),r.forEach(function(e){o[e<0?~e:e]||i.push([e])}),i},p=function(e){return t(e,n.apply(this,arguments))},g=function(e){return t(e,c.apply(this,arguments))},y=function(e,r){for(var t=0,n=e.length;t<n;){var o=t+n>>>1;e[o]<r?t=o+1:n=o}return t},d=function(e){function r(e,r){e.forEach(function(e){e<0&&(e=~e);var t=o[e];t?t.push(r):o[e]=[r]})}function t(e,t){e.forEach(function(e){r(e,t)})}function n(e,r){"GeometryCollection"===e.type?e.geometries.forEach(function(e){n(e,r)}):e.type in c&&c[e.type](e.arcs,r)}var o={},a=e.map(function(){return[]}),c={LineString:r,MultiLineString:t,Polygon:t,MultiPolygon:function(e,r){e.forEach(function(e){t(e,r)})}};e.forEach(n);for(var i in o)for(var u=o[i],f=u.length,s=0;s<f;++s)for(var l=s+1;l<f;++l){var h,p=u[s],g=u[l];(h=a[p])[i=y(h,g)]!==g&&h.splice(i,0,g),(h=a[g])[i=y(h,p)]!==p&&h.splice(i,0,p)}return a},m=function(e){if(null==e)return i;var r,t,n=e.scale[0],o=e.scale[1],a=e.translate[0],c=e.translate[1];return function(e,i){i||(r=t=0);var u=2,f=e.length,s=new Array(f),l=Math.round((e[0]-a)/n),h=Math.round((e[1]-c)/o);for(s[0]=l-r,r=l,s[1]=h-t,t=h;u<f;)s[u]=e[u],++u;return s}},b=function(e,r){function t(e){return p(e)}function n(e){var r;switch(e.type){case"GeometryCollection":r={type:"GeometryCollection",geometries:e.geometries.map(n)};break;case"Point":r={type:"Point",coordinates:t(e.coordinates)};break;case"MultiPoint":r={type:"MultiPoint",coordinates:e.coordinates.map(t)};break;default:return e}return null!=e.id&&(r.id=e.id),null!=e.bbox&&(r.bbox=e.bbox),null!=e.properties&&(r.properties=e.properties),r}function o(e){var r,t=0,n=1,o=e.length,a=new Array(o);for(a[0]=p(e[0],0);++t<o;)((r=p(e[t],t))[0]||r[1])&&(a[n++]=r);return 1===n&&(a[n++]=[0,0]),a.length=n,a}if(e.transform)throw new Error("already quantized");if(r&&r.scale)l=e.bbox;else{if(!((a=Math.floor(r))>=2))throw new Error("n must be â‰¥2");l=e.bbox||f(e);var a,c=l[0],i=l[1],u=l[2],s=l[3];r={scale:[u-c?(u-c)/(a-1):1,s-i?(s-i)/(a-1):1],translate:[c,i]}}var l,h,p=m(r),g=e.objects,y={};for(h in g)y[h]=n(g[h]);return{type:"Topology",bbox:l,transform:r,objects:y,arcs:e.arcs.map(o)}};e.bbox=f,e.feature=l,e.mesh=p,e.meshArcs=n,e.merge=g,e.mergeArcs=c,e.neighbors=d,e.quantize=b,e.transform=u,e.untransform=m,Object.defineProperty(e,"__esModule",{value:!0})});