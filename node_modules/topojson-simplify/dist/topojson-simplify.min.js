// https://github.com/topojson/topojson-simplify Version 3.0.2. Copyright 2017 Mike Bostock.
!function(r,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("topojson-client")):"function"==typeof define&&define.amd?define(["exports","topojson-client"],n):n(r.topojson=r.topojson||{},r.topojson)}(this,function(r,n){"use strict";function e(){return!0}function t(r){return r}function o(r){return null!=r.type}function a(r){var n=r[0],e=r[1],t=r[2];return Math.abs((n[0]-t[0])*(e[1]-n[1])-(n[0]-e[0])*(t[1]-n[1]))/2}function i(r){for(var n,e=-1,t=r.length,o=r[t-1],a=0;++e<t;)n=o,o=r[e],a+=n[0]*o[1]-n[1]*o[0];return Math.abs(a)/2}function u(r,n){return r[1][2]-n[1][2]}function c(r){return[r[0],r[1],0]}function f(r,n){if(e=r.length){if((n=+n)<=0||e<2)return r[0];if(n>=1)return r[e-1];var e,t=(e-1)*n,o=Math.floor(t),a=r[o];return a+(r[o+1]-a)*(t-o)}}function l(r,n){return n-r}function s(r,n){for(var e,t,o,a=0,i=r.length,u=0,c=r[n?a++:i-1],f=c[0]*_,l=c[1]*_/2+A,s=L(l),p=C(l);a<i;++a){c=r[a],e=f,f=c[0]*_,l=c[1]*_/2+A,t=s,s=L(l),o=p,p=C(l);var b=f-e,y=b>=0?1:-1,g=y*b,h=o*p,m=t*s+h*L(g),v=h*y*C(g);u+=w(v,m)}return u}function p(r,n){var e=s(r,!0);return n&&(e*=-1),2*(e<0?P+e:e)}function b(r){return 2*E(s(r,!1))}var y=function(r){function n(r){switch(r.type){case"GeometryCollection":r.geometries.forEach(n);break;case"LineString":t(r.arcs);break;case"MultiLineString":case"Polygon":r.arcs.forEach(t);break;case"MultiPolygon":r.arcs.forEach(o)}}function e(r){r<0&&(r=~r),h[r]||(h[r]=1,++m)}function t(r){r.forEach(e)}function o(r){r.forEach(t)}function a(r){var n;switch(r.type){case"GeometryCollection":n={type:"GeometryCollection",geometries:r.geometries.map(a)};break;case"LineString":n={type:"LineString",arcs:u(r.arcs)};break;case"MultiLineString":n={type:"MultiLineString",arcs:r.arcs.map(u)};break;case"Polygon":n={type:"Polygon",arcs:r.arcs.map(u)};break;case"MultiPolygon":n={type:"MultiPolygon",arcs:r.arcs.map(c)};break;default:return r}return null!=r.id&&(n.id=r.id),null!=r.bbox&&(n.bbox=r.bbox),null!=r.properties&&(n.properties=r.properties),n}function i(r){return r<0?~h[~r]:h[r]}function u(r){return r.map(i)}function c(r){return r.map(u)}var f,l,s=r.objects,p={},b=r.arcs,y=b.length,g=-1,h=new Array(y),m=0,v=-1;for(l in s)n(s[l]);for(f=new Array(m);++g<y;)h[g]&&(h[g]=++v,f[v]=b[g]);for(l in s)p[l]=a(s[l]);return{type:"Topology",bbox:r.bbox,transform:r.transform,objects:p,arcs:f}},g=function(r,n){function a(r){var n,e;switch(r.type){case"Polygon":e=i(r.arcs),n=e?{type:"Polygon",arcs:e}:{type:null};break;case"MultiPolygon":e=r.arcs.map(i).filter(t),n=e.length?{type:"MultiPolygon",arcs:e}:{type:null};break;case"GeometryCollection":e=r.geometries.map(a).filter(o),n=e.length?{type:"GeometryCollection",geometries:e}:{type:null};break;default:return r}return null!=r.id&&(n.id=r.id),null!=r.bbox&&(n.bbox=r.bbox),null!=r.properties&&(n.properties=r.properties),n}function i(r){return r.length&&u(r[0])?[r[0]].concat(r.slice(1).filter(c)):null}function u(r){return n(r,!1)}function c(r){return n(r,!0)}var f,l=r.objects,s={};null==n&&(n=e);for(f in l)s[f]=a(l[f]);return y({type:"Topology",bbox:r.bbox,transform:r.transform,objects:s,arcs:r.arcs})},h=function(r){function n(r){switch(r.type){case"GeometryCollection":r.geometries.forEach(n);break;case"Polygon":e(r.arcs);break;case"MultiPolygon":r.arcs.forEach(e)}}function e(r){for(var n=0,e=r.length;n<e;++n,++a)for(var t=r[n],i=0,u=t.length;i<u;++i){var c=t[i];c<0&&(c=~c);var f=o[c];null==f?o[c]=a:f!==a&&(o[c]=-1)}}var t,o=new Array(r.arcs.length),a=0;for(t in r.objects)n(r.objects[t]);return function(r){for(var n,e=0,t=r.length;e<t;++e)if(-1===o[(n=r[e])<0?~n:n])return!0;return!1}},m=function(r,e,t){return e=null==e?Number.MIN_VALUE:+e,null==t&&(t=i),function(o,a){return t(n.feature(r,{type:"Polygon",arcs:[o]}).geometry.coordinates[0],a)>=e}},v=function(r,n,e){var t=h(r),o=m(r,n,e);return function(r,n){return t(r,n)||o(r,n)}},d=function(){function r(r,n){for(;n>0;){var e=(n+1>>1)-1,o=t[e];if(u(r,o)>=0)break;t[o._=n]=o,t[r._=n=e]=r}}function n(r,n){for(;;){var e=n+1<<1,a=e-1,i=n,c=t[i];if(a<o&&u(t[a],c)<0&&(c=t[i=a]),e<o&&u(t[e],c)<0&&(c=t[i=e]),i===n)break;t[c._=n]=c,t[r._=n=i]=r}}var e={},t=[],o=0;return e.push=function(n){return r(t[n._=o]=n,o++),o},e.pop=function(){if(!(o<=0)){var r,e=t[0];return--o>0&&(r=t[o],n(t[r._=0]=r,0)),e}},e.remove=function(e){var a,i=e._;if(t[i]===e)return i!==--o&&(a=t[o],(u(a,e)<0?r:n)(t[a._=i]=a,i)),i},e},x=function(r,e){function t(r){i.remove(r),r[1][2]=e(r),i.push(r)}var o=r.transform?n.transform(r.transform):c,i=d();null==e&&(e=a);var u=r.arcs.map(function(r){var n,a,u,c=[],f=0;for(r=r.map(o),a=1,u=r.length-1;a<u;++a)n=[r[a-1],r[a],r[a+1]],n[1][2]=e(n),c.push(n),i.push(n);for(r[0][2]=r[u][2]=1/0,a=0,u=c.length;a<u;++a)n=c[a],n.previous=c[a-1],n.next=c[a+1];for(;n=i.pop();){var l=n.previous,s=n.next;n[1][2]<f?n[1][2]=f:f=n[1][2],l&&(l.next=s,l[2]=n[2],t(l)),s&&(s.previous=l,s[0]=n[0],t(s))}return r});return{type:"Topology",bbox:r.bbox,objects:r.objects,arcs:u}},M=function(r,n){var e=[];return r.arcs.forEach(function(r){r.forEach(function(r){isFinite(r[2])&&e.push(r[2])})}),e.length&&f(e.sort(l),n)},j=function(r,n){n=null==n?Number.MIN_VALUE:+n;var e=r.arcs.map(function(r){for(var e,t=-1,o=0,a=r.length,i=new Array(a);++t<a;)(e=r[t])[2]>=n&&(i[o++]=[e[0],e[1]]);return i.length=o,i});return{type:"Topology",transform:r.transform,bbox:r.bbox,objects:r.objects,arcs:e}},k=Math.PI,P=2*k,A=k/4,_=k/180,E=Math.abs,w=Math.atan2,L=Math.cos,C=Math.sin;r.filter=g,r.filterAttached=h,r.filterAttachedWeight=v,r.filterWeight=m,r.planarRingArea=i,r.planarTriangleArea=a,r.presimplify=x,r.quantile=M,r.simplify=j,r.sphericalRingArea=p,r.sphericalTriangleArea=b,Object.defineProperty(r,"__esModule",{value:!0})});